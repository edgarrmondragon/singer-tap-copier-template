[tool.poetry]
name = "[[ tap_package_distribution_name ]]"
version = "0.0.1"
description = "`[[ tap_id ]]` is a Singer tap for [[ tap_source_name ]], built with the Meltano SDK for Singer Taps."
authors = ["[[ author_fullname ]] <[[ author_email ]]>"]
keywords = [
  "ELT",
  "singer.io",
  "[[ tap_source_name ]]",
]
license = "Apache 2.0"
readme = "README.md"
homepage = "https://[[ repository_provider ]]/[[ repository_namespace ]]/[[ repository_name ]]"
repository = "https://[[ repository_provider ]]/[[ repository_namespace ]]/[[ repository_name ]]"
documentation = "https://[[ repository_provider ]]/[[ repository_namespace ]]/[[ repository_name ]]#readme"

[tool.poetry.dependencies]
python = "<3.11,>=3.7.1"
singer-sdk = "0.4.3"

[tool.poetry.dev-dependencies]
black = {version = "^22.3.0", allow-prereleases = true}
isort = "^5.10.1"
mypy = ">=0.942"
pytest = "^7.1.1"
pyupgrade = "^2.31.1"
types-requests = "^2.27.16"

# Flake8
darglint = "^1.8.1"
flake8 = "^4.0.1"
flake8-annotations = "^2.7.0"
flake8-docstrings = "^1.6.0"

[tool.isort]
profile = "black"
multi_line_output = 3 # Vertical Hanging Indent
src_paths = "[[ tap_package_import_name ]]"

[tool.pytest.ini_options]
addopts = "-vvv"

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true

[% raw %][[tool.mypy.overrides]][% endraw %]
ignore_missing_imports = true
module = ["backoff.*"]

[build-system]
requires = ["poetry-core>=1.0.8"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
# CLI declaration
"[[ tap_package_command_line_name ]]" = "[[ tap_package_import_name ]].tap:Tap[[ tap_source_id ]].cli"
