name: Test template output

on: [push]

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - "3.10"
        stream_type:
        - REST
        - GraphQL
        auth_method:
        - JWT
        - API Key
        - Bearer Token
        - Basic Auth
        - OAuth2
        - Custom or N/A

    steps:
    - name: Checkout code
      uses: actions/checkout@v3.0.2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3.1.2
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
        cache-dependency-path: .github/workflows/constraints.txt

    - name: Upgrade pip
      run: |
        pip install --constraint=.github/workflows/constraints.txt pip
        pip --version

    - name: Install Poetry
      run: |
        pipx install --pip-args=--constraint=.github/workflows/constraints.txt poetry
        poetry --version

    - name: Install copier
      run: |
        pipx install --pip-args=--constraint=.github/workflows/constraints.txt copier
        copier --version

    - name: Create target directory
      run: |
        mkdir ../output-dir

    - name: Create ${{ matrix.stream_type }} tap with ${{ matrix.auth_method }} authentication
      id: create-tap
      run: >
        copier . ../output-dir
        --defaults
        -d "python_main_version='${{ matrix.python-version }}'"
        -d "tap_stream_type=${{ matrix.stream_type }}"
        -d "tap_auth_method=${{ matrix.auth_method }}"

    - name: Install tox
      run: |
        pipx install --pip-args=--constraint=.github/workflows/constraints.txt tox
        tox --version

    - name: Run lint command from tox.ini
      run: |
        cd ../output-dir
        tox -e lint
